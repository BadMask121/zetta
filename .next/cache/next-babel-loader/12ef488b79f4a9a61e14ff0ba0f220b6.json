{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jeffreysmith/Desktop/Project/opensource/zetta/components/button/index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Button as CButton } from \"@chakra-ui/core\";\n\nvar Button = function Button(props) {\n  var variantStyle = {};\n\n  switch (props.variant) {\n    case \"primary\":\n      variantStyle = {\n        background: \"#5863F8\",\n        color: \"white\"\n      };\n      break;\n\n    case \"secondary\":\n      variantStyle = {\n        background: \"#fff\",\n        color: \"#5863F8\"\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return __jsx(CButton, _extends({\n    borderRadius: \"none\",\n    fontWeight: \"normal\"\n  }, variantStyle, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }), props.children);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/jeffreysmith/Desktop/Project/opensource/zetta/components/button/index.tsx"],"names":["React","Button","CButton","props","variantStyle","variant","background","color","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,OAAnB,QAA+C,iBAA/C;;AAKA,IAAMD,MAAM,GAAG,SAATA,MAAS,CAACE,KAAD,EAAyB;AACtC,MAAIC,YAAyB,GAAG,EAAhC;;AACA,UAAQD,KAAK,CAACE,OAAd;AACE,SAAK,SAAL;AACED,MAAAA,YAAY,GAAG;AACbE,QAAAA,UAAU,EAAE,SADC;AAEbC,QAAAA,KAAK,EAAE;AAFM,OAAf;AAIA;;AACF,SAAK,WAAL;AACEH,MAAAA,YAAY,GAAG;AACbE,QAAAA,UAAU,EAAE,MADC;AAEbC,QAAAA,KAAK,EAAE;AAFM,OAAf;AAIA;;AAEF;AACE;AAfJ;;AAiBA,SACE,MAAC,OAAD;AACE,IAAA,YAAY,EAAC,MADf;AAEE,IAAA,UAAU,EAAC;AAFb,KAGMH,YAHN,EAIMD,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGA,KAAK,CAACK,QANT,CADF;AAUD,CA7BD;;KAAMP,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { Button as CButton, ButtonProps } from \"@chakra-ui/core\";\n\nexport interface IButtonProps extends ButtonProps {\n  variant: \"primary\" | \"secondary\";\n}\nconst Button = (props: IButtonProps) => {\n  let variantStyle: ButtonProps = {};\n  switch (props.variant) {\n    case \"primary\":\n      variantStyle = {\n        background: \"#5863F8\",\n        color: \"white\",\n      };\n      break;\n    case \"secondary\":\n      variantStyle = {\n        background: \"#fff\",\n        color: \"#5863F8\",\n      };\n      break;\n\n    default:\n      break;\n  }\n  return (\n    <CButton\n      borderRadius=\"none\"\n      fontWeight=\"normal\"\n      {...variantStyle}\n      {...props}\n    >\n      {props.children}\n    </CButton>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}